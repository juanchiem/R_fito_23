# Métricas compuestas

```{r include=FALSE}
knitr::opts_chunk$set(echo = TRUE, 
                      warning = FALSE, 
                      message = FALSE, 
                      eval=FALSE, 
                      fig.width = 12, 
                      fig.height = 8)
```

```{r Setup}
# if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, epifitter, emmeans, performance, ggResidpanel, multcomp, multcompView)
theme_set(theme_light()) 
```

## AUC

Area bajo la curva de progreso de la enfermedad

Reproducción de: [APS-AUDPC](https://www.apsnet.org/edcenter/disimpactmngmnt/topc/EcologyAndEpidemiologyInR/DiseaseProgress/Pages/AUDPC.aspx)

```{r}
epi <- tibble(
  time = c(1,2,3,4), 
  dis = c(1,2,3,10))
```

```{r}
epi %>%  
  ggplot()+
  aes(x=time, y = dis)+
  geom_point()+
  geom_line()
```

Area bajo la curva del progreso de la enfermedad (ABC) - Absoluta

```{r}
abc_1  <- with(epi, 
                 AUDPC(time = time, 
                  y = dis, 
                  y_proportion = FALSE, 
                  type = "absolute"))  
abc_1
```

ABC standarizada

```{r}
sabc1 <- abc_1/(4-1)
sabc1
```

Aplicación a un caso real

Reproducción de: [APS Stripe rust](https://www.apsnet.org/edcenter/disimpactmngmnt/topc/EcologyAndEpidemiologyInR/DiseaseProgress/Pages/StripeRust.aspx)

```{r}
## Set up vector for Madras AUDPC Chart
dat <- tibble(
  dai = c(0,10,20,30,40,50,60,70,80,90,100), 
  sev_68 = c(0,0,0,0,3,20,50,80, 90, 100, 100), 
  sev_69 = c( 0,0,0,0,0,0,0,3,6,30,70)
)
dat
```

```{r}
dat %>%  
  ggplot()+
  aes(x = dai) +
  geom_line(aes(y = sev_68), col="red")+
  geom_line(aes(y = sev_69), col="blue")
```

```{r}
# Epidemia de 1968
with(dat, 
     AUDPC(time = dai, 
      y = sev_68, 
      y_proportion = FALSE, 
      type = "absolute"))
```

```{r}
# Epidemia de 1969
with(dat, 
     AUDPC(time = dai, 
      y = sev_69, 
      y_proportion = FALSE, 
      type = "absolute"))

```

```{r}
# un poco de coding
dat %>%  
  pivot_longer(
    cols= c(sev_68, sev_69), 
    names_to = "epidemia", 
    values_to = "sev", 
    names_prefix = "sev_")-> dat_long
```

```{r}
dat_long %>%
  ggplot()+
  aes(x = dai, y = sev, col=epidemia) +
  geom_line()
```

```{r}
dat_long %>%  
  group_by(epidemia) %>%  
  summarise(abc=AUDPC(time = dai, 
                        y = sev, 
                        y_proportion = FALSE, 
                        type = "absolute"))
```

## DSI

```{r}
# poroto  <-  rio::import("data/poroto.csv")
poroto <- read.csv("https://raw.githubusercontent.com/epifito/fitopatometria-r/main/data/poroto.csv")
```

Disease severity index (Indice de severidad)

-   Poroto/sclerotinia

Dataset de formato wide, que incluye 3 variables descriptivas y 4 variables respuesta.

```{r}
poroto %>% 
  mutate(diseased = class_1 + class_2 + class_3 + class_4)  %>% 
  mutate(inc_p = diseased/n) %>% 
  # mutate(dsi_eq1 = (1*class_1+2*class_2+3*class_3+4*class_4)/(n*4) *100) %>% 
  # mutate(dsi_eq2 = (1*class_1+2*class_2+3*class_3+4*class_4)/n) %>% 
  mutate(dsi = (.13*class_1 +.375*class_2 + .625*class_3 + .875*class_4)/n*100) %>%   
  mutate(dsi_p = dsi/100) %>% 
  mutate_at(vars(trt, rep), as.factor) -> poroto_dsi
poroto_dsi
```

```{r}
poroto_dsi %>%  
  ggplot() + 
  aes(x=trt, y =dsi) + 
  geom_point(alpha=.3)
```

Model fitting

```{r}
mod1 <- lm(dsi ~ trt, data = poroto_dsi)
```

```{r}
resid_panel(mod1, plots = c("resid", "qq"))
check_heteroscedasticity(mod1)
check_normality(mod1)
cld(emmeans(mod1, ~ trt, type = "response"))
```

```{r}
mod2 <- lm(sqrt(dsi) ~ trt, data = poroto_dsi)
```

```{r}
resid_panel(mod2, plots = c("resid", "qq"))
check_heteroscedasticity(mod2)
check_normality(mod2)
cld(emmeans(mod2, ~ trt, type = "response"))
```

```{r}
asin_tran <- make.tran("asin.sqrt", 100)
mod3 <- with(asin_tran,
            lm(linkfun(dsi) ~ trt, data = poroto_dsi)
            )
```

```{r}
resid_panel(mod3, plots = c("resid", "qq"))
check_heteroscedasticity(mod3)
check_normality(mod3)
cld(emmeans(mod3, ~ trt, type = "response"))
```

```{r}
mod4 = lm(log(dsi_p/(1-dsi_p)) ~ trt, data = poroto_dsi)
```

```{r}
resid_panel(mod4, plots = c("resid", "qq"))
check_heteroscedasticity(mod4)
check_normality(mod4)
cld(emmeans(mod4, ~trt, 
        tran = "logit", 
        type = "response"))
```

```{r}
compare_performance(mod1, mod2, mod3, mod4)
```

## Enfermedades que inducen senescencia

Ensayo de fungicidas en cebada (trt=3). DBCA con 4 rep. Evaluaciones de sev media a los 0, 9, 20 y 29 dias desde aplicado. Estimacion de AF activa (lo que no es senescencia) La senescencia no cuenta para ninguna enfermedad, ya que es imposible distinguir su causa.

```{r, include =FALSE}
# cebada_raw  <- rio::import("data/cebada_redu.csv")
```

```{r}
cebada_raw <- read.csv("https://raw.githubusercontent.com/epifito/fitopatometria-r/main/data/cebada_redu.csv")
```

Hacemos un cebada long solo con fines graficos, entonces no creamos `cebada_long`.

```{r}
cebada_long <- cebada_raw %>% 
  pivot_longer(
    cols = c("verdor", "e1_sev", "e2_sev"), 
    names_to = "var", 
    values_to = "val") %>% 
  mutate(var = factor(var),
         var = fct_relevel(var, "verdor")) 

cebada_long %>% 
  ggplot()+
  aes(x=dias, y=val, col = var)+
  facet_wrap("trt")+
  geom_point(alpha=0.3) +
  stat_summary(fun=mean, geom="line", 
               size=0.7, alpha=.5,  
               aes(col=var, group=var)) +
  scale_color_manual(
    labels = c("AF",  "Sev mancha en red (%)", "Sev escaldadura (%)"),
    values = c("green", "red", "blue")
  ) +
  theme_bw()+ 
  labs(title = "Evolución área foliar",
       y = "%", x = "Días desde aplicado", 
       col = "")
```

Ahora calculamos el AF sana (%), restando al AF activa, la severidad media de mancha en red y escaldadura.

```{r}
cebada <- cebada_raw %>% 
  mutate(af_sana = verdor - e1_sev - e2_sev) %>% 
  mutate(sev_tot = e1_sev + e2_sev) 
cebada
```

Finalmente calculamos el AUC del AF sana (LAI)

```{r}
cebada %>% 
  group_by(trt, rep) %>%
  summarize(auc = AUDPC(time = dias, 
                        y = af_sana, 
                        y_proportion = FALSE, 
                        type = "absolute")) -> cebada_auc
```

```{r}
cebada_auc <- cebada_auc %>% 
  mutate_at(vars(trt, rep), as.factor)
```

```{r}
cebada_auc %>% 
  ggplot()+
  aes(y=auc, x=trt, col=rep)+
  geom_point()
```
